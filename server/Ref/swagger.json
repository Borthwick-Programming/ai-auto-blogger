{
  "openapi": "3.0.1",
  "info": {
    "title": "WorkflowEngine.Api",
    "version": "1.0"
  },
  "paths": {
    "/api/projects/{projectId}/nodeconnections": {
      "get": {
        "tags": [
          "NodeConnections"
        ],
        "summary": "Retrieves all items associated with the specified project for the current user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project whose items are to be retrieved.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "NodeConnections"
        ],
        "summary": "Creates a new node connection for the specified project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project to which the node connection belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request object containing the details of the node connection to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeConnectionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeConnectionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/projects/{projectId}/nodeconnections/{id}": {
      "get": {
        "tags": [
          "NodeConnections"
        ],
        "summary": "Retrieves a specific resource by its unique identifier within the context of a project.",
        "description": "This method returns an HTTP 200 response with the resource data if it exists, or an\r\n            HTTP 404 response if the resource is not found.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project to which the resource belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the resource to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "NodeConnections"
        ],
        "summary": "Updates an existing node connection within the specified project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project containing the node connection to update.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the node connection to update.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request object containing the updated details of the node connection.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeConnectionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeConnectionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "NodeConnections"
        ],
        "summary": "Deletes a resource identified by the specified ID within the given project.",
        "description": "The operation requires the caller to have appropriate permissions for the specified\r\n            project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project containing the resource to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the resource to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/nodes": {
      "get": {
        "tags": [
          "NodeDefinitions"
        ],
        "summary": "GET api/nodes\r\nReturns all registered node definitions.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/projects/{projectId}/nodeinstances": {
      "get": {
        "tags": [
          "NodeInstances"
        ],
        "summary": "GET api/projects/{projectId}/nodeinstances\r\nRetrieves all nodes associated with the specified project for the current user.",
        "description": "This method requires the caller to be authenticated as the current user is used to\r\n            filter the results.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project whose nodes are to be retrieved.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "NodeInstances"
        ],
        "summary": "POST api/projects/{projectId}/nodeinstances\r\nCreates a new node instance within the specified project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project where the node instance will be created.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request object containing the details of the node instance to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeInstanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeInstanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/projects/{projectId}/nodeinstances/{nodeId}": {
      "get": {
        "tags": [
          "NodeInstances"
        ],
        "summary": "GET api/projects/{projectId}/nodeinstances/{nodeId}\r\nRetrieves the details of a specific node within a project.",
        "description": "This method returns an HTTP 200 response with the node details if the node is found,\r\n            or an HTTP 404 response if the node is not found.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project containing the node.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique identifier of the node to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "NodeInstances"
        ],
        "summary": "PUT api/projects/{projectId}/nodeinstances/{nodeId}\r\nUpdates an existing node instance within the specified project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project containing the node instance to update.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique identifier of the node instance to update. Must match the req ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request object containing the updated details of the node instance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeInstanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeInstanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "NodeInstances"
        ],
        "summary": "DELETE api/projects/{projectId}/nodeinstances/{nodeId}\r\nDeletes a node associated with the specified project.",
        "description": "This operation requires the current user to have appropriate permissions to delete\r\n            the node.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project to which the node belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique identifier of the node to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "GET: api/projects\r\nRetrieves all projects accessible (authenticated) to the current user.",
        "description": "This method returns a list of projects that the current user has permission to\r\n            access. The result is wrapped in an HTTP 200 OK response.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "POST: api/projects\r\nCreates a new project for the authenticated user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "GET: api/projects/{id}\r\nRetrieves a project by its unique identifier, if owned by the user.",
        "description": "This method returns an HTTP 200 response with the project data if the project is\r\n            found,  or an HTTP 404 response if no project with the specified identifier exists.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the project to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "DELETE: api/projects/{id}\r\nDeletes the project with the specified identifier.",
        "description": "This action requires the caller to be authenticated and authorized to delete the\r\n            specified project.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the project to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateNodeConnectionRequest": {
        "type": "object",
        "properties": {
          "fromNodeInstanceId": {
            "type": "string",
            "format": "uuid"
          },
          "fromPortName": {
            "type": "string",
            "nullable": true
          },
          "toNodeInstanceId": {
            "type": "string",
            "format": "uuid"
          },
          "toPortName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateNodeInstanceRequest": {
        "type": "object",
        "properties": {
          "nodeTypeId": {
            "type": "string",
            "nullable": true
          },
          "configurationJson": {
            "type": "string",
            "nullable": true
          },
          "positionX": {
            "type": "number",
            "format": "double"
          },
          "positionY": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateProjectRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateNodeConnectionRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fromNodeInstanceId": {
            "type": "string",
            "format": "uuid"
          },
          "fromPortName": {
            "type": "string",
            "nullable": true
          },
          "toNodeInstanceId": {
            "type": "string",
            "format": "uuid"
          },
          "toPortName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateNodeInstanceRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nodeTypeId": {
            "type": "string",
            "nullable": true
          },
          "configurationJson": {
            "type": "string",
            "nullable": true
          },
          "positionX": {
            "type": "number",
            "format": "double"
          },
          "positionY": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    }
  }
}